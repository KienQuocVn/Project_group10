@page
@model OnDemandTutor.API.Pages.ClassPage.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    Layout = "/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "Class List";
}

<h2 class="text-center">@ViewData["Title"]</h2>

<!-- New Class Button -->
<div class="mb-4">
    <a href="/ClassPage/Create" class="btn btn-success">New Class</a>
</div>

<form method="get" class="mb-4">
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="classId" class="form-label">Class ID:</label>
            <input type="text" id="classId" name="classId" class="form-control" value="@Model.ClassId" />
        </div>

        <div class="col-md-4">
            <label for="accountId" class="form-label">Account ID:</label>
            <input type="text" id="accountId" name="accountId" class="form-control" value="@Model.AccountId" />
        </div>

        <div class="col-md-4">
            <label for="subjectId" class="form-label">Subject ID:</label>
            <input type="text" id="subjectId" name="subjectId" class="form-control" value="@Model.SubjectId" />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label for="startDay" class="form-label">Start Day:</label>
            <input type="date" id="startDay" name="startDay" class="form-control" value="@Model.StartDay?.ToString("yyyy-MM-dd")" />
        </div>

        <div class="col-md-6">
            <label for="endDay" class="form-label">End Day:</label>
            <input type="date" id="endDay" name="endDay" class="form-control" value="@Model.EndDay?.ToString("yyyy-MM-dd")" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
</form>

@if (Model.PaginatedClasses != null)
{
    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Class ID</th>
                <th>Account ID</th>
                <th>Subject</th>
                <th>Start Day</th>
                <th>End Day</th>
                <th>Slots</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var classItem in Model.PaginatedClasses.Items)
            {
                <tr>
                    <td>@classItem.Id</td>
                    <td>@classItem.AccountId</td>
                    <td>@classItem.SubjectId</td>
                    <td>@classItem.StartDay.ToString("yyyy-MM-dd")</td>
                    <td>@classItem.EndDay.ToString("yyyy-MM-dd")</td>
                    <td>@classItem.AmountOfSlot</td>
                    <td>
                        <!-- Update and Delete buttons -->
                        <a asp-page="/ClassPage/UpdateClass" asp-route-id="@classItem.Id" class="btn btn-warning btn-sm">Update</a>
                        <a href="/ClassPage/Delete?id=@classItem.Id" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this class?')">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Links -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.PaginatedClasses.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize">Previous</a>
                </li>
            }
            @if (Model.PaginatedClasses.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize">Next</a>
                </li>
            }
        </ul>
    </nav>
}


    <!-- Pagination Links -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.PaginatedClasses.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize">Previous</a>
                </li>
            }
            @if (Model.PaginatedClasses.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize">Next</a>
                </li>
            }
        </ul>
    </nav>
}
